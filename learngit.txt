Git is a distributed version control system.
Before initializing a git repository you should first use :
git config --global user.email "you@example.com"
git config --global user.name "youname"
to collocate your account
"if you only want to use your account under current directory,you don't need the parameter "--global"
__________________________________________________________________________________________________
you can use:
       git init  :to initialize a git repository
       git status:to exiam the status of git repository
       git diff  :to exiam the changing information
       git log   :to look back changes in history
           you can use parameter"--pretty=oneline"to show information in oneline
       git reset --hard HEARD^:to return last version
           --hard:_waited to be added
           HEARD^ is the parameter used to represent last version
           HEARD~n represents lsat n version
           you can use version number to replace HEARD^ to return to pointed version
       git reflog:to look back every order
__________________________________________________________________________________________________
add files to a git repository:
(under menus)
    1.git add filename
    2.git commit -m"statement"
"-m is used to add a statement
"you can add more than one files at a time
___________________________________________________________________________________________________
working directory and repository
working directory is what you see in the computer
repository has a menu call ".git" to storage your stage
     'git add' add your changes to stage
     'git commit' put in all files in stage to current branch
____________________________________________________________________________________________________
remove changes
     git checkout --file:
         it means remove all the changes in working directory which has not benn added to stage
     git reset HEARD <file>:
        it will remove all the changes in stage
remove files
     you can use:
     git rm file
     git commit -m"staement" to remove files in repository
____________________________________________________________________________________________________
to learn more about remote repository you need:
      1.locate a github account
      2.create ssh key :
        if there is no id_rsa.pub in the .ssh you need to order:
        "ssh-keygen -t rsa -C"you@example.com""to create ssh key
     3.then you need to add the content id_rsa.pub to ssh key in git hub
add remote repository:
   1.create a new repo
   2.fill in repository name
   3.click "create repository"
   4.$git remote add origin git @~
   5.$git push -u origin master
   6.make some chanes in local repository
   7$git push origin master
"'-u' is the parameter to add content to a empty repostiroy
"'origin' is the name of remote repository
_____________________________________________________________________________________________________
brach
git branch name:create a branch called 'name'
git checkout name:jump to 'name' branch
git chechout -b name=git branch name+git checkout name
git brach :list all braches and show current branch
git merge name:merge 'name' branch to current branch
git branch -d name:delete 'name' branch
git log --graph:see pitcures of merging brnches
''use parameter "--no-ff" in merge to prohibit Fast forward to crate a new commit
git stash:save work directory and index state WIP on branch
    git stash list :list stash
    git stash apply :recover work directoru and index state
    git stash drop :delete stash
    git stash pop =git stash apply+git stash drop
    git stash apply stash@{num} :recover pointed stash
